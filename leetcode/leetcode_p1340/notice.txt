力扣1340题. 跳跃游戏
给你一个整数数组arr和一个整数d。每一个可以从下标i跳到:
  i + x, 其中i+x < arr.length 且0<x<=d.
  i - x, 其中i-x >= 0 且0 < x <= d。
除此之外，从下标i跳到下标j需要满足: arr[i] > arr[j]且arr[i] > arr[k], 其中下标k是所有i到j之间的数字(min(i,j) < k < max(i, j)


这道题考察的是动态规划的内容，可以使用动态规划来求解，也可以使用记忆化搜索来求解。

1、动态规划
使用动态规划求解时需要找到最优子结构和转移方程
此时需要先对原数组的索引值按值进行从小到大排序，然后对排序后的索引进行遍历；
最优子结构为从小到大依次取值时，对应的最长可跳跃访问的下标数，依次存放到一个状态数组中；
转移方程为新增元素能访问的范围(+-d，且新增元素范围内最大)内，新增元素对应状态数组位置元素变为(1或者范围内状态数组最大值的+1)

2、记忆化搜索
记忆化搜索也属于动态规划的一种，特点是把所以访问过的位置状态都记录下来（这点跟动态规划一样），
它不需要对原数组进行排序，但需要递归去完成访问每个位置，并更新状态。
思路是遍历数组，找到每个数值能跳跃的最大数量，而该数值能访问的最大元素个数与其可达范围内元素能跳跃的最大数量有关。
所以如果范围内元素对应的最大数量已知，则可以直接计算得到结果，否则就递归寻找范围内元素对应的最大数量。

这里特别需要注意的一点是递归的终止条件设定，
本例是从大到小跳跃的，所以递归终止条件为边界或跳跃点数值不再减少，此外还受半径d的影响。